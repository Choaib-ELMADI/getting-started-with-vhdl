>> entity: The entity defines the inputs and the outputs for a module (ports and generics).
└─► associated with: end entity;

>> is: The keyword "is" is used to introduce the detailed implementation or definition of an entity or an architecture.

>> architecture: The architecture contains most of our logic code, and it consists of one or more processes.
└─► associated with: end architecture;

>> begin: The begin keyword is used to start the executable part of a VHDL code.

>> end: The end keyword marks the conclusion of the current block or structure.

>> process: Processes are the basic building blocks of an architecture. The code they contain is executed sequentially.
└─► associated with: end process;

>> report: Used to print messages to the simulator terminal.

>> wait: Stop the execution of a process indefinitely.

>> wait for <time_value> <time_unit>: Delay the execution of a program for any amount of time.

>> loop: Execute a set of statements repeatedly until a certain condition is met or indefinitely.
└─► associated with: end loop;

>> exit: Immediately terminate a loop before it naturally completes.

>> for <c> in <r> loop: <c> is an arbitrary name that will be available inside of the loop. <r> is a range of integers or enumerated values to iterate over.
└─► associated with: end loop;
└─► 0 to 9: incrementing range including all 10 numbers from 0 to 9
└─► 9 downto 0: decrementing range including all 10 numbers from 9 to 0
└─► 0 to 0: range including only the number 0
└─► 0 to -1: empty range

>> integer'image(number):
    > This function is part of the standard VHDL "std.standard" package.
    > It converts an integer (number, in this case) into its string representation.
